//基本类型 int 整型 chart 字符型 float 小数点型
//int a; //每定义一个变量系统都会分配一个存储空间
//int a = 1; //把1 赋值给a
//int b, a, d = 2;

//存取 
//a = 1; d = b;

//指针型
//与其他变量不同的是他保存的是地址而不是数据

//如何定义一个指针类型数据并初始化？
//int *pI = &A
//& 取地址符号 取整型变量A的地址
//定义了一个名字叫PI的整型指针变量。初始化为A的地址
//PI = &D //把D的地址赋值给PI 
//pI指向D //pI帮我们指出了D的位置

//如果只知道PI而不知道D如何取值呢(通过指针来取变量的值)
 //E = *pI  //取PI所指的变量的值赋值给E

 //在定义的时候 在指针变量前加*取他的指针 在取值的时候变量前加*取他所指变量的值
//Null 是不指向任何地址的特殊标记,其值为0 初始化指针的时候经常用

//系统只负责释放空间

#include <iostream>  //
using namespace std; //代码中的输入输出会方便
int main()
{
    int a; //定义了一个整型变量a,并没有进行初始化
    int b = 10;   //定义了一个整型变量B 给他初始化为10
    a = 11;  //赋值语句 把11赋值给了a
    cout <<"a:"<<a<<endl; // endl代表换行  输出a:变量值后以及变量的值后换行
    cout <<"b: "<<b<<endl;
    int *p = &a;
    cout<<"*p: " <<*p<<endl;
    *p =*p +1;
    cout <<"a："<<a<<endl;

    p = NULL;
    cout<<"*p: " <<p<<endl;
  
    return 0;

}